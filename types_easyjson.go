// TEMPORARY AUTOGENERATED FILE: easyjson stub code to make the package
// compilable during generation.

package  meilisearch

import (
  "github.com/mailru/easyjson/jwriter"
  "github.com/mailru/easyjson/jlexer"
)

func ( Client ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* Client ) UnmarshalJSON([]byte) error { return nil }
func ( Client ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* Client ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_Client *Client

func ( CreateIndexRequest ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* CreateIndexRequest ) UnmarshalJSON([]byte) error { return nil }
func ( CreateIndexRequest ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* CreateIndexRequest ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_CreateIndexRequest *CreateIndexRequest

func ( Details ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* Details ) UnmarshalJSON([]byte) error { return nil }
func ( Details ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* Details ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_Details *Details

func ( DocumentsRequest ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* DocumentsRequest ) UnmarshalJSON([]byte) error { return nil }
func ( DocumentsRequest ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* DocumentsRequest ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_DocumentsRequest *DocumentsRequest

func ( Dump ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* Dump ) UnmarshalJSON([]byte) error { return nil }
func ( Dump ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* Dump ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_Dump *Dump

func ( Health ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* Health ) UnmarshalJSON([]byte) error { return nil }
func ( Health ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* Health ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_Health *Health

func ( Index ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* Index ) UnmarshalJSON([]byte) error { return nil }
func ( Index ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* Index ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_Index *Index

func ( IndexesQuery ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* IndexesQuery ) UnmarshalJSON([]byte) error { return nil }
func ( IndexesQuery ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* IndexesQuery ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_IndexesQuery *IndexesQuery

func ( IndexesResults ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* IndexesResults ) UnmarshalJSON([]byte) error { return nil }
func ( IndexesResults ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* IndexesResults ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_IndexesResults *IndexesResults

func ( Key ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* Key ) UnmarshalJSON([]byte) error { return nil }
func ( Key ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* Key ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_Key *Key

func ( KeyParsed ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* KeyParsed ) UnmarshalJSON([]byte) error { return nil }
func ( KeyParsed ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* KeyParsed ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_KeyParsed *KeyParsed

func ( MinWordSizeForTypos ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* MinWordSizeForTypos ) UnmarshalJSON([]byte) error { return nil }
func ( MinWordSizeForTypos ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* MinWordSizeForTypos ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_MinWordSizeForTypos *MinWordSizeForTypos

func ( ResultKey ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* ResultKey ) UnmarshalJSON([]byte) error { return nil }
func ( ResultKey ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* ResultKey ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_ResultKey *ResultKey

func ( ResultTask ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* ResultTask ) UnmarshalJSON([]byte) error { return nil }
func ( ResultTask ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* ResultTask ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_ResultTask *ResultTask

func ( SearchRequest ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* SearchRequest ) UnmarshalJSON([]byte) error { return nil }
func ( SearchRequest ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* SearchRequest ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_SearchRequest *SearchRequest

func ( SearchResponse ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* SearchResponse ) UnmarshalJSON([]byte) error { return nil }
func ( SearchResponse ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* SearchResponse ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_SearchResponse *SearchResponse

func ( Settings ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* Settings ) UnmarshalJSON([]byte) error { return nil }
func ( Settings ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* Settings ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_Settings *Settings

func ( Stats ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* Stats ) UnmarshalJSON([]byte) error { return nil }
func ( Stats ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* Stats ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_Stats *Stats

func ( StatsIndex ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* StatsIndex ) UnmarshalJSON([]byte) error { return nil }
func ( StatsIndex ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* StatsIndex ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_StatsIndex *StatsIndex

func ( Task ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* Task ) UnmarshalJSON([]byte) error { return nil }
func ( Task ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* Task ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_Task *Task

func ( TenantTokenClaims ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* TenantTokenClaims ) UnmarshalJSON([]byte) error { return nil }
func ( TenantTokenClaims ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* TenantTokenClaims ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_TenantTokenClaims *TenantTokenClaims

func ( TenantTokenOptions ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* TenantTokenOptions ) UnmarshalJSON([]byte) error { return nil }
func ( TenantTokenOptions ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* TenantTokenOptions ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_TenantTokenOptions *TenantTokenOptions

func ( TypoTolerance ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* TypoTolerance ) UnmarshalJSON([]byte) error { return nil }
func ( TypoTolerance ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* TypoTolerance ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_TypoTolerance *TypoTolerance

func ( UpdateIndexRequest ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* UpdateIndexRequest ) UnmarshalJSON([]byte) error { return nil }
func ( UpdateIndexRequest ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* UpdateIndexRequest ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_UpdateIndexRequest *UpdateIndexRequest

func ( Version ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* Version ) UnmarshalJSON([]byte) error { return nil }
func ( Version ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* Version ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_Version *Version
